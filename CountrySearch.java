
package dashboardcw;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Abdulrahman Ibrahim 
 */

// This class is the JFrame for Project List for the DE (Germany), it will be tasked to send a query and populate the table with the data
// This is as Germany has the highest amount of projects 

public class CountrySearch extends javax.swing.JFrame {
    
    String pickCountry;

    /** Creates new form GermanyProjectList */
    public CountrySearch() throws SQLException {
        initComponents();
        TotalNumber();
        resetButton.setVisible(false);
        TotalNumber.setText("No Data showing");
    }

    // In here, A query and execution happens, where by it gets all all data and stores it in an ArrayList, which will be used later on
    // To populate in the table.
    public ArrayList<GroupData> DataList() throws SQLException {
        pickCountry = Getcountry.getText();

        ArrayList<GroupData> DataList = new ArrayList<GroupData>();

        String query = "SELECT * FROM 5CS03GroupThree WHERE Country = '"+ pickCountry +"' ";

        Statement e;
        ResultSet x;

        e = My_Database.getConnection().prepareStatement(query);
        x = e.executeQuery(query);
        GroupData costumerDetails;
        while (x.next()) {
            costumerDetails = new GroupData(x.getInt("projectRcn"), x.getInt("projectID"), x.getString("projectAcronym"), x.getString("role"), x.getInt("CompanyID"), x.getString("ComapnyName"), x.getString("CompanyShortName"), x.getString("ActivityType"),
                    x.getString("endOfParticipation"), x.getInt("ecContribution"), x.getString("Country"), x.getString("Street"), x.getString("City"), x.getString("PostCode"), x.getString("OrganisationURL"), x.getString("VatNumber"), x.getString("ProjectLink"));
            DataList.add(costumerDetails);
        }
        return DataList;
    }
    
    // In here, we set the data into the rows. 
    public void ShowTable() throws SQLException {
        ArrayList<GroupData> list = DataList();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Object[] row = new Object[17];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getProjectRcn();
            row[1] = list.get(i).getProjectID();
            row[2] = list.get(i).getProjectAcronym();
            row[3] = list.get(i).getRole();
            row[4] = list.get(i).getCompanyID();
            row[5] = list.get(i).getCompanyName();
            row[6] = list.get(i).getCompanyShortName();
            row[7] = list.get(i).getActivityType();
            row[8] = list.get(i).getEndOfParticipation();
            row[9] = list.get(i).getecContribution();
            row[10] = list.get(i).getCountry();
            row[11] = list.get(i).getStreet();
            row[12] = list.get(i).getCity();
            row[13] = list.get(i).getPostcode();
            row[14] = list.get(i).getOrganisationURL();
            row[15] = list.get(i).getVatNumber();
            row[16] = list.get(i).getProjectLink();
            model.addRow(row);

        }

    }
    
        // This is an query that will return the amount of projects that from DE (Germany) 
        public int TotalNumber() throws SQLException {
        String query = "SELECT COUNT(*) AS rowcount FROM 5CS03GroupThree where Country = '"+ pickCountry +"' ";

        Statement e;
        ResultSet x;

        e = My_Database.getConnection().prepareStatement(query);
        x = e.executeQuery(query);

        x.next();
        int count = x.getInt("rowcount");
        x.close();

        String StringIntNumber = Integer.toString(count);
        TotalNumber.setText("Total Number of projects showing:" + StringIntNumber );

        return count;

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        PageTittle = new javax.swing.JLabel();
        TotalNumber = new javax.swing.JLabel();
        Getcountry = new javax.swing.JTextField();
        buttonCountry = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Project RCN", "Project ID", "Project Acronym", "Role", "Comapny ID", "Comapny Name", "Company Short Name ", "Activity Type", "End of Particiption", "EC Contribution", "Country", "Street", "City", "PostCode", "orgranisation Website", "VAT Number", "Project Link"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        PageTittle.setText("Country Search: Please use the search bar to search for projects that are from the country  you search");

        buttonCountry.setText("Search");
        buttonCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCountryActionPerformed(evt);
            }
        });

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1472, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TotalNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PageTittle, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(317, 317, 317)))
                        .addGap(187, 187, 187)
                        .addComponent(Getcountry, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resetButton)
                            .addComponent(buttonCountry))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(PageTittle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TotalNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Getcountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(buttonCountry)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resetButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // This button will excute the search, where it will show what the user has searched.
    // It will also show the Reset button, to allow the user to search again. 
    // In addition, the user will get an error if there is no match, in terms with Country
    // For example, if the user spelt a country in correct or has entered a country that has no projects.
    private void buttonCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCountryActionPerformed
        try {
            ShowTable();
            TotalNumber();
            resetButton.setVisible(true);
            if(jTable1.getRowCount()==0){
                JOptionPane.showMessageDialog(null, "Wrong Country", "Error", 2);
            }
           
        } catch (SQLException ex) {
            Logger.getLogger(CountrySearch.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonCountryActionPerformed

    // This clears the table, to allow a new search to occur
    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
     DefaultTableModel cTable = (DefaultTableModel) jTable1.getModel();
        int count = cTable.getRowCount();
        for (int i = count - 1; i >= 0; i--) {
            cTable.removeRow(i);
        }
        resetButton.setVisible(false);
        TotalNumber.setText("No Data showing");
    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CountrySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CountrySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CountrySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CountrySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CountrySearch().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(CountrySearch.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Getcountry;
    private javax.swing.JLabel PageTittle;
    private javax.swing.JLabel TotalNumber;
    private javax.swing.JButton buttonCountry;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton resetButton;
    // End of variables declaration//GEN-END:variables

}
